#!/bin/bash

CREDS_FILE=/tmp/workshop-credentials.json

if [ -f "$CREDS_FILE" ]
then
    AZURE_RESOURCE_GROUP=$(cat $CREDS_FILE | jq -r '.AZURE_RESOURCE_GROUP')
    AZURE_SUBSCRIPTION=$(cat $CREDS_FILE | jq -r '.AZURE_SUBSCRIPTION')
else 
  echo "ABORT: CREDS_FILE: $CREDS_FILE not found"
  exit 1
fi

getMonolithPublicIP() {
  HOSTNAME_MONOLITH="workshop-ez-monolith"
  echo "Retrieving $HOSTNAME_MONOLITH Public IP"
  PUBLIC_IP_MONOLITH=$(az vm list \
    --resource-group "$AZURE_RESOURCE_GROUP" \
    --subscription "$AZURE_SUBSCRIPTION" \
    --query "[?name=='$HOSTNAME_MONOLITH'].publicIps" -d -o tsv)
}

getDockerPublicIP() {
  HOSTNAME_DOCKER="workshop-ez-docker"
  echo "Retrieving $HOSTNAME_DOCKER Public IP"
  PUBLIC_IP_DOCKER=$(az vm list \
    --resource-group "$AZURE_RESOURCE_GROUP" \
    --subscription "$AZURE_SUBSCRIPTION" \
    --query "[?name=='$HOSTNAME_DOCKER'].publicIps" -d -o tsv)
}

showAppUrls() {

  getMonolithPublicIP
  getDockerPublicIP
  
  echo ""
  echo "-----------------------------------------------------------------------------------"
  echo "Workshop Application URLs:"
  echo "-----------------------------------------------------------------------------------"
  echo ""
  echo "MONOLITH"
  echo "http://$PUBLIC_IP_MONOLITH"
  echo ""
  echo "MONOLITH ADMIN UI"
  echo "http://$PUBLIC_IP_MONOLITH:8094"
  echo ""
  echo "DOCKER"
  echo "http://$PUBLIC_IP_DOCKER"
  echo ""
  echo ""
}

setProblemPattern() {

  getMonolithPublicIP

  echo ""
  PROBLEM_PATTERN=$1
  ENABLED=$2

  if [ -z $ENABLED ]; then
    ENABLED=true
  fi

  if [[ "$ENABLED" != "true" && "$ENABLED" != "false" ]]; then
    echo "ERROR: setProblemPattern invalid ENABLED argument. Must pass 'true' or 'false'"
    exit 1
  fi

  if [ -z "$PROBLEM_PATTERN" ]; then
    echo "ERROR: setProblemPattern missing PROBLEM_PATTERN argument"
    exit 1
  fi

  echo ""
  echo "--------------------------------------------------------------------------------------"
  echo "Setting $PROBLEM_PATTERN on $HOSTNAME_MONOLITH ($PUBLIC_IP_MONOLITH)"
  STATUS_CODE=$(curl --write-out %{http_code} --silent --output /dev/null "http://$PUBLIC_IP_MONOLITH:8091/services/ConfigurationService/setPluginEnabled?name=$PROBLEM_PATTERN&enabled=$ENABLED")
  if [[ "$STATUS_CODE" -ne 202 ]] ; then
    echo "ERROR: setProblemPattern Received STATUS_CODE = $STATUS_CODE"
    exit 1
  else
    echo "Done. $PROBLEM_PATTERN set to $ENABLED."
  fi

  echo ""
  echo "--------------------------------------------------------------------------------------"
  echo "List of enabled Patterns on $HOSTNAME_MONOLITH ($PUBLIC_IP_MONOLITH)"
  echo "--------------------------------------------------------------------------------------"
  curl -s "http://$PUBLIC_IP_MONOLITH:8091/services/ConfigurationService/getEnabledPluginNames" | \
    sed -e 's|<ns:getEnabledPluginNamesResponse xmlns:ns=\"http://webservice.business.easytravel.dynatrace.com\">||g' | \
    sed -e 's|</ns:getEnabledPluginNamesResponse>||g' | \
    sed -e 's|</ns:return><ns:return>|\n|g' | \
    sed -e 's|<ns:return>|\n|g' | \
    sed -e 's|</ns:return>|\n|g'
  echo ""
  echo ""
}